#  ______      __                          
# /\  _  \    /\ \                         
# \ \ \L\ \   \_\ \     __      ___ ___    
#  \ \  __ \  /'_` \  /'__`\  /' __` __`\  
#   \ \ \/\ \/\ \L\ \/\ \L\.\_/\ \/\ \/\ \ 
#    \ \_\ \_\ \___,_\ \__/.\_\ \_\ \_\ \_\
#     \/_/\/_/\/__,_ /\/__/\/_/\/_/\/_/\/_/                                
#                  ____                                 ___             
#  /'\_/`\        /\  _`\                    __        /\_ \            
# /\      \    ___\ \ \/\ \     __      ___ /\_\     __\//\ \     ____  
# \ \ \__\ \  /'___\ \ \ \ \  /'__`\  /' _ `\/\ \  /'__`\\ \ \   /',__\ 
#  \ \ \_/\ \/\ \__/\ \ \_\ \/\ \L\.\_/\ \/\ \ \ \/\  __/ \_\ \_/\__, `\
#   \ \_\\ \_\ \____\\ \____/\ \__/.\_\ \_\ \_\ \_\ \____\/\____\/\____/
#    \/_/ \/_/\/____/ \/___/  \/__/\/_/\/_/\/_/\/_/\/____/\/____/\/___/ 
#  ____               ___                __            
# /\  _`\            /\_ \              /\ \           
# \ \ \L\ \_ __    __\//\ \    __  __   \_\ \     __   
#  \ \ ,__/\`'__\/'__`\\ \ \  /\ \/\ \  /'_` \  /'__`\ 
#   \ \ \/\ \ \//\  __/ \_\ \_\ \ \_\ \/\ \L\ \/\  __/ 
#    \ \_\ \ \_\\ \____\/\____\\ \____/\ \___,_\ \____\
#     \/_/  \/_/ \/____/\/____/ \/___/  \/__,_ /\/____/
#
#
# Overview:
#   Splash screen:
#     welcome() # Prints splash screen
#   Rummy commands:
#     rummy@play()
#   Calendar widget:
#     cal()
#   Cat widget:
#     cats()
#   Todo app commands:
#     todo@add("Add a task")
#     todo@rm(3)    # Finish task no. 3
#     todo@clear()  # Clear todo list
#
# Have fun, scripters!


let CATS = ["
     _
   |\\'/-..--.
  / _ _   ,  ;
 `~=`Y'~_<._./
  <`-....__.'",
"

 |\\__/,|   (`\\
 |_ _  |.--.) )
 ( T   )     /
(((^_(((/(((_/",
"

    \\    /\\
     )  ( ')
    (  /  )
     \\(__)|",
"

      ^~^  ,
     ('Y') )
     /   \\/ 
    (\\|||/)",
"   .       .
   \\`-\"'\"-'/
    } 6 6 {
   =.  Y  ,=
     /^^^\\  .
    /     \\  )
   (  )-(  )/
    \"\"   \"\"",
"

         /\\_/\\
    ____/ o o \\
  /~____  =Y= /
 (______)__m_m)"
];

let map = f -> list -> {
    for item in list {
        f item
    }
};

let reduce = f -> acc -> list -> {
    for item in list {
        let acc = f acc item
    }
    acc
};

let sum = reduce add 0;
let product = reduce mul 1;
let prod = product;

let join = sep -> list -> {
    let out = "";
    let count = 0;
    let size = len list;

    for item in list {
        let count = count + 1;
        let out = out + item;
        if count < size {
            let out = out + sep;
        }
    }

    out
};

let fact = n -> prod (2 to n + 1);


let inc = n -> n + 1;
let dec = n -> n - 1;

let double = n -> n * 2;
let triple = n -> n * 3;

let half = n -> n // 2;
let third = n -> n // 3;
let quarter = n -> n // 4;

let ls = 'lsd;
let cat = 'bat;


# let prompt = cwd -> (fmt@blue "(dune) ") + (fmt@italics (fmt@green cwd)) + (fmt@blue "$ ");
# let incomplete_prompt = cwd -> ((len cwd) + (len "(dune) ")) * " " + (fmt@yellow "> ");


let lib = {
  fs: fs,
  os: os,
  fmt: fmt,
  time: time,
  rand: rand,
  math: math,
  widget: widget
};


let about = _ -> {
  echo (
    widget@joiny
      (widget@create "About"
"        Hello, welcome to " + (fmt@yellow "Dune Shell!") + "
      Written by: " + (fmt@magenta "http://adam-mcdaniel.net") + "\n
I wrote Dune to blah blah blah"
50 10)

      (widget@joinx
        (widget@create "Features"
"Dune has a wide set of
features, it's basically a
full blown language!

It supports several uncommon
features in a shell, such as:
operator overloading,
lambdas, macros, quoted
expressions like Lisp, and
more!

Dune's libraries are very
extensive. There are
libraries for:

 ☞ A simple widget system🪟
 ☞ OS information        💽
 ☞ Basic Math, trig, etc.🧮
 ☞ File system operations📂
 ☞ Text color and styling📝
 ☞ Functional programming🔗

And more!"
30 26)

        (widget@joiny
          (widget@create "About the Author" "I'm a sophomore at\nthe University of\nTennessee🏴󠁵󠁳󠁴󠁮󠁿\nstudying Computer💻\nScience🧪.\n\nI'm extremely \ninterested in\nlanguage design\n& compiler design.\nCheck out my other\nprojects on GitHub:\nadam-mcdaniel" 20 16)
          (widget@create "Cat" (rand@choose CATS) 20 10)
)))
};


let welcomebanner = _ ~> {


    let logo = "
        ██████╗ ██╗   ██╗███╗   ██╗███████╗
        ██╔══██╗██║   ██║████╗  ██║██╔════╝
        ██║  ██║██║   ██║██╔██╗ ██║█████╗  
        ██║  ██║██║   ██║██║╚██╗██║██╔══╝  
        ██████╔╝╚██████╔╝██║ ╚████║███████╗
        ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚══════╝
                                     ";

    let logo = "

        ██████╗░██╗░░░██╗███╗░░██╗███████╗
        ██╔══██╗██║░░░██║████╗░██║██╔════╝
        ██║░░██║██║░░░██║██╔██╗██║█████╗░░
        ██║░░██║██║░░░██║██║╚████║██╔══╝░░
        ██████╔╝╚██████╔╝██║░╚███║███████╗
        ╚═════╝░░╚═════╝░╚═╝░░╚══╝╚══════╝
";

    (_ -> {
        let now = time@now ();
        let time-emoji = if now@hour <= 6 "🌃"
            else if now@hour <= 10 "🌅"
            else if now@hour <= 18 "🌤️ "
            else "🌃";
        let date-emoji = if now@month == 1 "⛄"
            else if now@month == 2 "💖"
            else if now@month == 3 "🍀"
            else if now@month == 4 "🌂"
            else if now@month == 5 "🌻"
            else if now@month == 6 "🌞"
            else if now@month == 7 "🌊"
            else if now@month == 8 "📝"
            else if now@month == 9 "🍎"
            else if now@month == 10 "🎃"
            else if now@month == 11 "🍂"
            else if now@month == 12 "🌨️"
            else "📅";
        let zodiac-emoji = if now@month == 1 (if now@day < 20 "🐐" else "🏺")
            else if now@month == 2 (if now@day < 19 "🏺" else "🐟")
            else if now@month == 3 (if now@day < 21 "🐟" else "🐏")
            else if now@month == 4 (if now@day < 20 "🐏" else "🐂")
            else if now@month == 5 (if now@day < 21 "🐂" else "👬")
            else if now@month == 6 (if now@day < 21 "👬" else "🦀")
            else if now@month == 7 (if now@day < 23 "🦀" else "🦁")
            else if now@month == 8 (if now@day < 23 "🦁" else "👩")
            else if now@month == 9 (if now@day < 23 "👩" else "⚖️")
            else if now@month == 10 (if now@day < 23 "⚖️" else "🦂")
            else if now@month == 11 (if now@day < 22 "🦂" else "🏹")
            else if now@month == 12 (if now@day < 22 "🏹" else "🐐")
            else "⭐";
        echo "┌─────────────────Welcome to ...─────────────────┐";
        for ch in (chars logo) {
            print (fmt@bold (if ch == "█" {
               fmt@faint (fmt@red ch)
            } else {
               fmt@faint (fmt@dark@blue ch)
            }));
        }
        echo "";
        echo "        The time is " + (fmt@magenta now@time@str) + " " + time-emoji + " on " + (fmt@cyan now@date@str);
        echo "└────────────────────────────────────────────────┘";
    }) ();

};


let is-leapyear = year -> {
    if year % 4 == 0 && year % 100 != 0 {
        True
    } else if year % 100 == 0 && year % 400 == 0 {
        True
    } else {
        False
    }
};

let days-in-month = month -> year -> {
    if month == 2 {
        28 + (if (is-leapyear year) 1 else 0)
    } else {
        31 - (((month - 1) % 7) % 2)
    }
};

let day-of-week = m -> d -> y -> {
    let t = [0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4];

    if m < 3 {
        let y = y - 1
    }

    (((y + (int(y // 4.0))) - (int(y // 100.0))) + (int(y // 400.0)) + t@(m - 1) + d) % 7
};

let WEEKDAYS = [
	"Sunday",
	"Monday",
	"Tuesday",
	"Wednesday",
	"Thursday",
	"Friday",
	"Saturday"
];

let MONTHS = [
	"January",
	"February",
	"March",
	"April",
	"May",
	"June",
	"July",
	"August",
	"September",
	"October",
	"November",
	"December"
];

let make-calendar = m -> d -> y -> {
    let now = {month: m, day: d, year: y};
    let result = MONTHS@(now@month - 1) + " " + (str now@day) + ", " + (str now@year) + "\n";
	let result = " " * ((28 - (len result)) // 2 + 1) + result;
    let result = result + " Su  Mo  Tu  We  Th  Fr  Sa\n";

    let dof = day-of-week now@month 1 now@year;
    let dim = days-in-month now@month now@year;

    for i in 0 to dof {
        let result = result + "    ";
    }

    for i in 1 to dim + 1 {
        let num = str i;
        if (len num) < 2 {
            let num = (if now@day == i " *" else "  ") + num
        } else {
            let num = (if now@day == i "*" else " ") + num
        }

        let result = result + num + (if (i + dof) % 7 == 0 "\n" else " ")
    }
    widget@create "Calendar" result 30 10
};

let cal = _ ~> {
    (_ -> {
        let now = time@now ();
        make-calendar now@month now@day now@year
    }) ();
};



let welcome = _ ~> {
    welcomebanner ();
    (_ -> {
        let now = time@now ();
        echo (widget@joinx
            (make-calendar now@month now@day now@year)
            (widget@create "Cat" (rand@choose CATS) 20 10));
    }) ();
};


let yesorno = _ -> {
    (input (fmt@blue "(y/n) ")) != "n"
};

let wait = _ -> {
   input (fmt@italics (fmt@blue "(Press enter to continue) "));
};

clear ();
welcome ();